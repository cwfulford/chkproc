#!/bin/bash
# $Id: chkproc,v 1.16 2018/07/08 20:54:17 fulford Exp fulford $
# $Source: /src/admin/usr/local/etc/RCS/chkproc,v $
# $Revision: 1.16 $
# Author C W Fulford.
# Copyright 2014 (c) C W Fulford.
# Licensed for public use under the LGPL, .
# For assistance contact fulford@fulford.net 0709 229 5385
########################################################################
cmd=`basename $0`
syntax="$cmd [-c config] [-d(ebug)] [-l] [-r <email_rcpts>] [-v(erbose)] procid"
while [ $# -gt 0 ] ;do
	case $1 in 
		-c) config=$2;shift 2;;	
		-d) debug=:;set -x;shift;;
		-l) log=:;shift;;
		-r) _rcpts=$2;shift 2;;
		-v) verbose=:;shift;;
		-*) echo "syntax $syntax" >&2;exit ;;
		 *) procid=$1;shift;;
	esac
done


if [ -z "$procid" ];then
	echo $syntax >&2;
	exit 1
fi

config=${config:-"/usr/local/etc/chkproc.cf"}

if [ ! -f $config ] ;then
		echo "$cmd: $config not found">&2
fi
tmp=/var/tmp/$cmd$$

if [ -f $config ];then
       if grep -e "^${procid}:" $config >/dev/null ;then
	   eval `sed -ne  '/^'$procid':/,/^$/{
		/^[ \t]*[^=]*=.*$/p
	   }' $config`
	else
		[ "$verbose" ] &&{
	      	 	echo "$cmd: can't find process id \"$procid\" in $config" >&2
			_end 1
		}
	fi
fi

_end () {
	rval=$1
	[ -f $tmp ] && rm  $tmp 
	exit $rval
}
trap  "_end" 15

if ! getent hosts $host>/dev/null;then 
	echo "$cmd: can't resolve $host" >&2
	_end 1
fi

[ -n "$_rcpts" -a -n "$rcpts" ] && $rcpts="$rcpts,$_rcpts"
rcpts=${rcpts:-`id -nu`}

_alert () { case $1 in
		down) mailx -s "ALERT - $port on $host $1" $rcpts <$tmp ;;
		stopped) mailx -s "ALERT - $proc stopped on $host" $rcpts<$tmp;;
	     esac
	}



_up () { nmap -Pn -p $port $host >$tmp 
		state=`awk -v port=$port <$tmp '{
			split($1,a,"/")	
			if(a[1] == port) print $2
		  }'`
		[[ $verbose ]] && {
			echo "$cmd: port $port $state on $host" >&2
		}
		if [ "$state" == "open" ];then
			return 0
		else
			return 1
		fi
}
if _up ;then
	ssh -qp $port $host "ps -ef|grep $proc" |
	awk '$1 ~ /root/'|
	if  grep -q $proc ;then 
		[ $verbose ] && echo "$cmd: $proc running on $host">&2
	else
		[ "$restart" ] &&{
			$restart
			logger "restarting $procid"
		}
		[ $verbose ] &&{
			 echo "$cmd: $proc stopped on $host">&2
		}
		_alert stopped
	fi
else
	_alert down 
fi
_end
